<?xml version='1.0' encoding='UTF-8'?>
<!--dtd约束-->
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <!--配置类和表对应 class标签的 name：实体类的全路径，  table是class对应的表-->
    <class name ="hibernateStudy.configs.bean.onetomanymapping.Customer" table="customer" >
        <!--配置实体类id和表id对应 hibernate要求实体类有一个属性唯一的值 和 hibernate要求表有字段作为唯一的值对应-->
        <!--id 标签 name：实体类里id的属性名称 column：生成表的字段的名称 ,此处是让类id属性和表的id相互对应 -->
        <id name="cid" column="cid">
            <!--  设置id的增长策略,native：可以根据数据库品牌和版本设置数据库，使得id作为主键并自增 。
                                uuid：hibernate会自动生成uuid值，实体类的id必须是字符串类型，数据库对应varchar(主键，唯一标识id)-->
            <generator class="native"></generator>
        </id>
        <!--  配置其他属性  name属性是类的成员 column是表的字段,如果不写，hibernate会自动创建和name一样的字段名  type属性用于规定sql生成的字段的类型一般不用，因为hibernate会自动对应类对象的属性，-->
        <property name="custName" column="custName"></property>
        <property name="custLevel" column="custLevel"></property>
        <property name="custSource" column="custSource"></property>
        <property name="custPhone" column="custPhone"></property>
        <property name="custMobile" column="custMobile"></property>

        <!--  在customer映射文件中表示所有的联系人  save-update级联保存 delete级联删除   inverse:true 放弃customer的主键维护，false默认不放弃-->
        <!-- 懒加载： fetch：select 是默认值 不需要变  lazy = true 懒加载  -->
        <!-- batch size: 批量抓取 数值大一些会减少sql语句的发送量  -->
        <set name="setContact" cascade="save-update,delete" inverse="true" lazy="true" batch-size="10">
            <!--  hibernate双向维护外键即 一和多的一方都维护外键  -->
            <key column="cid"></key>
            <!--    设置映射的类  -->
            <one-to-many class="hibernateStudy.configs.bean.onetomanymapping.Contact"/>
        </set>
    </class>

</hibernate-mapping>